const sum = (a, b, c) => a + b + c;
//console.log(sum(1, 2, 3)) // 6

// Каррирование процесс превращения функции с множественной арностью в набор
// функций с меньшей арностью (преобразовывает функцию с n параметрами в набор
// функций с меньшим количеством параметров)

const curry = (fn) => {
    debugger
    // При вызове функции мы создаем новую функцию curried и возвращаем ее
    const curried = (...args1) => {
        // args1 -- массив из аргументов которые были переданы в функцию
        if (args1.length >= fn.length) {
            // если количество аргументов равно, то просто вызываем исходную
            // функцию
            return fn(...args1)
        } else {
            // иначе возвращаем другую функцию, аргументом которой будет
            // другой вызов функции c другими пакраметрами
            return (...args2) => {
                // в итоге мы должны прийти к вызову функции с n равным fn.length
                return curried(...args1, ...args2)
            }
        }
    }
    return curried
}

const func = curry(sum)
console.log(func(1,2)(3))